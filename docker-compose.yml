version: '3.8'

services:
  # Backend - .NET Core API
  backend:
    build: ./backend
    container_name: backend-api
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgreSQL=Host=postgres;Database=postgres;Username=postgres;Password=secret
      - ConnectionStrings__Elasticsearch=http://elasticsearch:9200
    depends_on:
      - postgres
      - elasticsearch

  # Frontend - Angular
  frontend:
    build: ./frontend
    container_name: frontend-app
    ports:
      - "4200:80"
    depends_on:
      - backend
    restart: always

  # AI Service - Python FastAPI (Optional)
  ai-service:
    build: ./ai-service
    container_name: ai-service
    ports:
      - "8000:8000"
    depends_on:
      - backend
    restart: always

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Elasticsearch - NoSQL Data Store
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  # Nginx - Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

  # Prometheus - Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  postgres-data:
  elasticsearch-data:
  grafana-data:
